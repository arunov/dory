Terminals unused in grammar

   TOK_LEX_ERROR
   TOK_PAT_NOT
   TOK_UMINUS
   TOK_PRINT
   TOK_SHORT
   TOK_RBRACK
   TOK_QMARK
   TOK_LONG
   TOK_BIT
   TOK_ENUM
   TOK_DOUBLE_COLON
   TOK_LBRACK
   TOK_DOT


State 18 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce


Grammar

    0 $accept: specification $end

    1 specification: decl_star rule_star

    2 decl_star: /* empty */
    3          | decl_star decl
    4          | decl_star error TOK_SEMICOLON

    5 decl: variable
    6     | event_decl TOK_SEMICOLON
    7     | func
    8     | class_decl TOK_SEMICOLON
    9     | TOK_SEMICOLON

   10 variable: type ident_list TOK_SEMICOLON
   11         | type error TOK_SEMICOLON
   12         | TOK_IDENT error TOK_SEMICOLON

   13 var_star: variable
   14         | var_star variable

   15 ident_list: ident_list TOK_COMMA var_ident
   16           | var_ident

   17 var_ident: TOK_IDENT
   18          | TOK_IDENT TOK_ASSIGN expr

   19 class_decl: TOK_CLASS class_ident
   20           | TOK_CLASS error

   21 class_ident: TOK_IDENT

   22 event_decl: event_hdr formal_list

   23 event_hdr: TOK_EVENT TOK_IDENT

   24 formal_list: TOK_LPAREN formal_param_list TOK_RPAREN

   25 formal_param_list: /* empty */
   26                  | formal_params

   27 formal_params: formal_param
   28              | formal_params TOK_COMMA formal_param

   29 formal_param: type var_ident

   30 func: func_hdr formal_list TOK_SEMICOLON
   31     | func_hdr formal_list func_body

   32 func_hdr: type TOK_IDENT
   33         | type error

   34 func_body: TOK_LBRACE func_stmt TOK_RBRACE

   35 func_stmt: stmt_star
   36          | var_star stmt_star

   37 rule_star: rule
   38          | rule_star rule

   39 rule: rule_pattern TOK_ARROW stmt

   40 rule_pattern: primitive_pat_star
   41             | rule_pattern TOK_PAT_STAR
   42             | TOK_NOT rule_pattern
   43             | rule_pattern TOK_PAT_OR rule_pattern
   44             | rule_pattern TOK_COLON rule_pattern
   45             | TOK_LPAREN rule_pattern TOK_RPAREN

   46 primitive_pat_star: primitive_pat
   47                   | primitive_pat TOK_BITOR expr

   48 primitive_pat: event_call
   49              | TOK_ANY

   50 event_call: TOK_IDENT event_params_list

   51 event_params_list: TOK_LPAREN event_params TOK_RPAREN

   52 event_params: /* empty */
   53             | TOK_IDENT
   54             | event_params TOK_COMMA TOK_IDENT

   55 stmt: TOK_SEMICOLON
   56     | return_stmt TOK_SEMICOLON
   57     | break_stmt TOK_SEMICOLON
   58     | compstmt_star
   59     | assign_expr TOK_SEMICOLON
   60     | if_expr_star
   61     | while_expr
   62     | fun_call_stmt

   63 compstmt_star: compstmt
   64              | compstmt TOK_SEMICOLON

   65 compstmt: TOK_LBRACE stmt_star TOK_RBRACE

   66 stmt_star: stmt_star stmt
   67          | stmt
   68          | stmt_star error

   69 return_stmt: TOK_RETURN expr

   70 break_stmt: TOK_BREAK

   71 if_expr_star: if_expr
   72             | if_expr TOK_ELSE stmt

   73 if_expr: TOK_IF expr stmt

   74 while_expr: TOK_WHILE expr stmt

   75 fun_call_stmt: TOK_IDENT func_params TOK_SEMICOLON

   76 fun_call: TOK_IDENT func_params

   77 func_params: TOK_LPAREN func_param_list TOK_RPAREN

   78 func_param_list: /* empty */
   79                | expr
   80                | func_param_list TOK_COMMA expr

   81 expr: expr_star
   82     | expr TOK_PLUS expr
   83     | expr TOK_MINUS expr
   84     | expr TOK_MULT expr
   85     | expr TOK_DIV expr
   86     | expr TOK_MOD expr
   87     | expr TOK_BITAND expr
   88     | expr TOK_BITOR expr
   89     | expr TOK_BITXOR expr
   90     | expr TOK_SHL expr
   91     | expr TOK_SHR expr
   92     | expr TOK_AND expr
   93     | expr TOK_OR expr
   94     | expr TOK_EQ expr
   95     | expr TOK_NE expr
   96     | expr TOK_GT expr
   97     | expr TOK_LT expr
   98     | expr TOK_GE expr
   99     | expr TOK_LE expr
  100     | TOK_LPAREN expr TOK_RPAREN
  101     | TOK_MINUS expr
  102     | TOK_NOT expr
  103     | TOK_BITNOT expr

  104 expr_star: literal
  105          | ref_expr
  106          | assign_expr
  107          | fun_call

  108 assign_expr: ref_expr TOK_ASSIGN expr

  109 ref_expr: TOK_IDENT

  110 literal: TOK_STRCONST
  111        | TOK_UINTNUM
  112        | TOK_DOUBLENUM
  113        | TOK_TRUE
  114        | TOK_FALSE

  115 baseType: TOK_BOOL
  116         | TOK_BYTE
  117         | TOK_VOID
  118         | TOK_INT
  119         | TOK_DOUBLE
  120         | TOK_STRING
  121         | TOK_UNSIGNED TOK_INT

  122 type: baseType
  123     | TOK_IDENT


Terminals, with rules where they appear

$end (0) 0
error (256) 4 11 12 20 33 68
TOK_LEX_ERROR (258)
TOK_PAT_STAR (259) 41
TOK_PAT_OR (260) 43
TOK_PAT_NOT (261)
TOK_PLUS (262) 82
TOK_MINUS (263) 83 101
TOK_UMINUS (264)
TOK_MULT (265) 84
TOK_DIV (266) 85
TOK_MOD (267) 86
TOK_BITAND (268) 87
TOK_BITOR (269) 47 88
TOK_BITNOT (270) 103
TOK_BITXOR (271) 89
TOK_SHL (272) 90
TOK_SHR (273) 91
TOK_GT (274) 96
TOK_LT (275) 97
TOK_GE (276) 98
TOK_LE (277) 99
TOK_EQ (278) 94
TOK_NE (279) 95
TOK_AND (280) 92
TOK_OR (281) 93
TOK_NOT (282) 42 102
TOK_COMMA (283) 15 28 54 80
TOK_ASSIGN (284) 18 108
TOK_SEMICOLON (285) 4 6 8 9 10 11 12 30 55 56 57 59 64 75
TOK_COLON (286) 44
TOK_ARROW (287) 39
TOK_LBRACE (288) 34 65
TOK_RBRACE (289) 34 65
TOK_LPAREN (290) 24 45 51 77 100
TOK_RPAREN (291) 24 45 51 77 100
TOK_IF (292) 73
TOK_ELSE (293) 72
TOK_CLASS (294) 19 20
TOK_RETURN (295) 69
TOK_EVENT (296) 23
TOK_ANY (297) 49
TOK_PRINT (298)
TOK_UINTNUM (299) 111
TOK_DOUBLENUM (300) 112
TOK_VOID (301) 117
TOK_STRING (302) 120
TOK_STRCONST (303) 110
TOK_INT (304) 118 121
TOK_UNSIGNED (305) 121
TOK_BOOL (306) 115
TOK_BYTE (307) 116
TOK_DOUBLE (308) 119
TOK_SHORT (309)
TOK_TRUE (310) 113
TOK_FALSE (311) 114
TOK_IDENT (312) 12 17 18 21 23 32 50 53 54 75 76 109 123
TOK_WHILE (313) 74
TOK_BREAK (314) 70
TOK_RBRACK (315)
TOK_QMARK (316)
TOK_LONG (317)
TOK_BIT (318)
TOK_ENUM (319)
"reduce" (320)
"then" (321)
TOK_DOUBLE_COLON (322)
TOK_LBRACK (323)
TOK_DOT (324)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
specification (71)
    on left: 1, on right: 0
decl_star (72)
    on left: 2 3 4, on right: 1 3 4
decl (73)
    on left: 5 6 7 8 9, on right: 3
variable (74)
    on left: 10 11 12, on right: 5 13 14
var_star (75)
    on left: 13 14, on right: 14 36
ident_list (76)
    on left: 15 16, on right: 10 15
var_ident (77)
    on left: 17 18, on right: 15 16 29
class_decl (78)
    on left: 19 20, on right: 8
class_ident (79)
    on left: 21, on right: 19
event_decl (80)
    on left: 22, on right: 6
event_hdr (81)
    on left: 23, on right: 22
formal_list (82)
    on left: 24, on right: 22 30 31
formal_param_list (83)
    on left: 25 26, on right: 24
formal_params (84)
    on left: 27 28, on right: 26 28
formal_param (85)
    on left: 29, on right: 27 28
func (86)
    on left: 30 31, on right: 7
func_hdr (87)
    on left: 32 33, on right: 30 31
func_body (88)
    on left: 34, on right: 31
func_stmt (89)
    on left: 35 36, on right: 34
rule_star (90)
    on left: 37 38, on right: 1 38
rule (91)
    on left: 39, on right: 37 38
rule_pattern (92)
    on left: 40 41 42 43 44 45, on right: 39 41 42 43 44 45
primitive_pat_star (93)
    on left: 46 47, on right: 40
primitive_pat (94)
    on left: 48 49, on right: 46 47
event_call (95)
    on left: 50, on right: 48
event_params_list (96)
    on left: 51, on right: 50
event_params (97)
    on left: 52 53 54, on right: 51 54
stmt (98)
    on left: 55 56 57 58 59 60 61 62, on right: 39 66 67 72 73 74
compstmt_star (99)
    on left: 63 64, on right: 58
compstmt (100)
    on left: 65, on right: 63 64
stmt_star (101)
    on left: 66 67 68, on right: 35 36 65 66 68
return_stmt (102)
    on left: 69, on right: 56
break_stmt (103)
    on left: 70, on right: 57
if_expr_star (104)
    on left: 71 72, on right: 60
if_expr (105)
    on left: 73, on right: 71 72
while_expr (106)
    on left: 74, on right: 61
fun_call_stmt (107)
    on left: 75, on right: 62
fun_call (108)
    on left: 76, on right: 107
func_params (109)
    on left: 77, on right: 75 76
func_param_list (110)
    on left: 78 79 80, on right: 77 80
expr (111)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
    99 100 101 102 103, on right: 18 47 69 73 74 79 80 82 83 84 85
    86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 108
expr_star (112)
    on left: 104 105 106 107, on right: 81
assign_expr (113)
    on left: 108, on right: 59 106
ref_expr (114)
    on left: 109, on right: 105 108
literal (115)
    on left: 110 111 112 113 114, on right: 104
baseType (116)
    on left: 115 116 117 118 119 120 121, on right: 122
type (117)
    on left: 122 123, on right: 10 11 29 32 33


state 0

    0 $accept: . specification $end

    $default  reduce using rule 2 (decl_star)

    specification  go to state 1
    decl_star      go to state 2


state 1

    0 $accept: specification . $end

    $end  shift, and go to state 3


state 2

    1 specification: decl_star . rule_star
    3 decl_star: decl_star . decl
    4          | decl_star . error TOK_SEMICOLON

    error          shift, and go to state 4
    TOK_NOT        shift, and go to state 5
    TOK_SEMICOLON  shift, and go to state 6
    TOK_LPAREN     shift, and go to state 7
    TOK_CLASS      shift, and go to state 8
    TOK_EVENT      shift, and go to state 9
    TOK_ANY        shift, and go to state 10
    TOK_VOID       shift, and go to state 11
    TOK_STRING     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_UNSIGNED   shift, and go to state 14
    TOK_BOOL       shift, and go to state 15
    TOK_BYTE       shift, and go to state 16
    TOK_DOUBLE     shift, and go to state 17
    TOK_IDENT      shift, and go to state 18

    decl                go to state 19
    variable            go to state 20
    class_decl          go to state 21
    event_decl          go to state 22
    event_hdr           go to state 23
    func                go to state 24
    func_hdr            go to state 25
    rule_star           go to state 26
    rule                go to state 27
    rule_pattern        go to state 28
    primitive_pat_star  go to state 29
    primitive_pat       go to state 30
    event_call          go to state 31
    baseType            go to state 32
    type                go to state 33


state 3

    0 $accept: specification $end .

    $default  accept


state 4

    4 decl_star: decl_star error . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 34


state 5

   42 rule_pattern: TOK_NOT . rule_pattern

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 35

    rule_pattern        go to state 36
    primitive_pat_star  go to state 29
    primitive_pat       go to state 30
    event_call          go to state 31


state 6

    9 decl: TOK_SEMICOLON .

    $default  reduce using rule 9 (decl)


state 7

   45 rule_pattern: TOK_LPAREN . rule_pattern TOK_RPAREN

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 35

    rule_pattern        go to state 37
    primitive_pat_star  go to state 29
    primitive_pat       go to state 30
    event_call          go to state 31


state 8

   19 class_decl: TOK_CLASS . class_ident
   20           | TOK_CLASS . error

    error      shift, and go to state 38
    TOK_IDENT  shift, and go to state 39

    class_ident  go to state 40


state 9

   23 event_hdr: TOK_EVENT . TOK_IDENT

    TOK_IDENT  shift, and go to state 41


state 10

   49 primitive_pat: TOK_ANY .

    $default  reduce using rule 49 (primitive_pat)


state 11

  117 baseType: TOK_VOID .

    $default  reduce using rule 117 (baseType)


state 12

  120 baseType: TOK_STRING .

    $default  reduce using rule 120 (baseType)


state 13

  118 baseType: TOK_INT .

    $default  reduce using rule 118 (baseType)


state 14

  121 baseType: TOK_UNSIGNED . TOK_INT

    TOK_INT  shift, and go to state 42


state 15

  115 baseType: TOK_BOOL .

    $default  reduce using rule 115 (baseType)


state 16

  116 baseType: TOK_BYTE .

    $default  reduce using rule 116 (baseType)


state 17

  119 baseType: TOK_DOUBLE .

    $default  reduce using rule 119 (baseType)


state 18

   12 variable: TOK_IDENT . error TOK_SEMICOLON
   50 event_call: TOK_IDENT . event_params_list
  123 type: TOK_IDENT .

    error       shift, and go to state 43
    TOK_LPAREN  shift, and go to state 44

    error      [reduce using rule 123 (type)]
    TOK_IDENT  reduce using rule 123 (type)

    event_params_list  go to state 45


state 19

    3 decl_star: decl_star decl .

    $default  reduce using rule 3 (decl_star)


state 20

    5 decl: variable .

    $default  reduce using rule 5 (decl)


state 21

    8 decl: class_decl . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 46


state 22

    6 decl: event_decl . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 47


state 23

   22 event_decl: event_hdr . formal_list

    TOK_LPAREN  shift, and go to state 48

    formal_list  go to state 49


state 24

    7 decl: func .

    $default  reduce using rule 7 (decl)


state 25

   30 func: func_hdr . formal_list TOK_SEMICOLON
   31     | func_hdr . formal_list func_body

    TOK_LPAREN  shift, and go to state 48

    formal_list  go to state 50


state 26

    1 specification: decl_star rule_star .
   38 rule_star: rule_star . rule

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 35

    $default  reduce using rule 1 (specification)

    rule                go to state 51
    rule_pattern        go to state 28
    primitive_pat_star  go to state 29
    primitive_pat       go to state 30
    event_call          go to state 31


state 27

   37 rule_star: rule .

    $default  reduce using rule 37 (rule_star)


state 28

   39 rule: rule_pattern . TOK_ARROW stmt
   41 rule_pattern: rule_pattern . TOK_PAT_STAR
   43             | rule_pattern . TOK_PAT_OR rule_pattern
   44             | rule_pattern . TOK_COLON rule_pattern

    TOK_PAT_STAR  shift, and go to state 52
    TOK_PAT_OR    shift, and go to state 53
    TOK_COLON     shift, and go to state 54
    TOK_ARROW     shift, and go to state 55


state 29

   40 rule_pattern: primitive_pat_star .

    $default  reduce using rule 40 (rule_pattern)


state 30

   46 primitive_pat_star: primitive_pat .
   47                   | primitive_pat . TOK_BITOR expr

    TOK_BITOR  shift, and go to state 56

    $default  reduce using rule 46 (primitive_pat_star)


state 31

   48 primitive_pat: event_call .

    $default  reduce using rule 48 (primitive_pat)


state 32

  122 type: baseType .

    $default  reduce using rule 122 (type)


state 33

   10 variable: type . ident_list TOK_SEMICOLON
   11         | type . error TOK_SEMICOLON
   32 func_hdr: type . TOK_IDENT
   33         | type . error

    error      shift, and go to state 57
    TOK_IDENT  shift, and go to state 58

    ident_list  go to state 59
    var_ident   go to state 60


state 34

    4 decl_star: decl_star error TOK_SEMICOLON .

    $default  reduce using rule 4 (decl_star)


state 35

   50 event_call: TOK_IDENT . event_params_list

    TOK_LPAREN  shift, and go to state 44

    event_params_list  go to state 45


state 36

   41 rule_pattern: rule_pattern . TOK_PAT_STAR
   42             | TOK_NOT rule_pattern .
   43             | rule_pattern . TOK_PAT_OR rule_pattern
   44             | rule_pattern . TOK_COLON rule_pattern

    $default  reduce using rule 42 (rule_pattern)


state 37

   41 rule_pattern: rule_pattern . TOK_PAT_STAR
   43             | rule_pattern . TOK_PAT_OR rule_pattern
   44             | rule_pattern . TOK_COLON rule_pattern
   45             | TOK_LPAREN rule_pattern . TOK_RPAREN

    TOK_PAT_STAR  shift, and go to state 52
    TOK_PAT_OR    shift, and go to state 53
    TOK_COLON     shift, and go to state 54
    TOK_RPAREN    shift, and go to state 61


state 38

   20 class_decl: TOK_CLASS error .

    $default  reduce using rule 20 (class_decl)


state 39

   21 class_ident: TOK_IDENT .

    $default  reduce using rule 21 (class_ident)


state 40

   19 class_decl: TOK_CLASS class_ident .

    $default  reduce using rule 19 (class_decl)


state 41

   23 event_hdr: TOK_EVENT TOK_IDENT .

    $default  reduce using rule 23 (event_hdr)


state 42

  121 baseType: TOK_UNSIGNED TOK_INT .

    $default  reduce using rule 121 (baseType)


state 43

   12 variable: TOK_IDENT error . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 62


state 44

   51 event_params_list: TOK_LPAREN . event_params TOK_RPAREN

    TOK_IDENT  shift, and go to state 63

    $default  reduce using rule 52 (event_params)

    event_params  go to state 64


state 45

   50 event_call: TOK_IDENT event_params_list .

    $default  reduce using rule 50 (event_call)


state 46

    8 decl: class_decl TOK_SEMICOLON .

    $default  reduce using rule 8 (decl)


state 47

    6 decl: event_decl TOK_SEMICOLON .

    $default  reduce using rule 6 (decl)


state 48

   24 formal_list: TOK_LPAREN . formal_param_list TOK_RPAREN

    TOK_VOID      shift, and go to state 11
    TOK_STRING    shift, and go to state 12
    TOK_INT       shift, and go to state 13
    TOK_UNSIGNED  shift, and go to state 14
    TOK_BOOL      shift, and go to state 15
    TOK_BYTE      shift, and go to state 16
    TOK_DOUBLE    shift, and go to state 17
    TOK_IDENT     shift, and go to state 65

    $default  reduce using rule 25 (formal_param_list)

    formal_param_list  go to state 66
    formal_params      go to state 67
    formal_param       go to state 68
    baseType           go to state 32
    type               go to state 69


state 49

   22 event_decl: event_hdr formal_list .

    $default  reduce using rule 22 (event_decl)


state 50

   30 func: func_hdr formal_list . TOK_SEMICOLON
   31     | func_hdr formal_list . func_body

    TOK_SEMICOLON  shift, and go to state 70
    TOK_LBRACE     shift, and go to state 71

    func_body  go to state 72


state 51

   38 rule_star: rule_star rule .

    $default  reduce using rule 38 (rule_star)


state 52

   41 rule_pattern: rule_pattern TOK_PAT_STAR .

    $default  reduce using rule 41 (rule_pattern)


state 53

   43 rule_pattern: rule_pattern TOK_PAT_OR . rule_pattern

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 35

    rule_pattern        go to state 73
    primitive_pat_star  go to state 29
    primitive_pat       go to state 30
    event_call          go to state 31


state 54

   44 rule_pattern: rule_pattern TOK_COLON . rule_pattern

    TOK_NOT     shift, and go to state 5
    TOK_LPAREN  shift, and go to state 7
    TOK_ANY     shift, and go to state 10
    TOK_IDENT   shift, and go to state 35

    rule_pattern        go to state 74
    primitive_pat_star  go to state 29
    primitive_pat       go to state 30
    event_call          go to state 31


state 55

   39 rule: rule_pattern TOK_ARROW . stmt

    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_IDENT      shift, and go to state 79
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    stmt           go to state 82
    compstmt_star  go to state 83
    compstmt       go to state 84
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92


state 56

   47 primitive_pat_star: primitive_pat TOK_BITOR . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 104
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 57

   11 variable: type error . TOK_SEMICOLON
   33 func_hdr: type error .

    TOK_SEMICOLON  shift, and go to state 109

    $default  reduce using rule 33 (func_hdr)


state 58

   17 var_ident: TOK_IDENT .
   18          | TOK_IDENT . TOK_ASSIGN expr
   32 func_hdr: type TOK_IDENT .

    TOK_ASSIGN  shift, and go to state 110

    TOK_LPAREN  reduce using rule 32 (func_hdr)
    $default    reduce using rule 17 (var_ident)


state 59

   10 variable: type ident_list . TOK_SEMICOLON
   15 ident_list: ident_list . TOK_COMMA var_ident

    TOK_COMMA      shift, and go to state 111
    TOK_SEMICOLON  shift, and go to state 112


state 60

   16 ident_list: var_ident .

    $default  reduce using rule 16 (ident_list)


state 61

   45 rule_pattern: TOK_LPAREN rule_pattern TOK_RPAREN .

    $default  reduce using rule 45 (rule_pattern)


state 62

   12 variable: TOK_IDENT error TOK_SEMICOLON .

    $default  reduce using rule 12 (variable)


state 63

   53 event_params: TOK_IDENT .

    $default  reduce using rule 53 (event_params)


state 64

   51 event_params_list: TOK_LPAREN event_params . TOK_RPAREN
   54 event_params: event_params . TOK_COMMA TOK_IDENT

    TOK_COMMA   shift, and go to state 113
    TOK_RPAREN  shift, and go to state 114


state 65

  123 type: TOK_IDENT .

    $default  reduce using rule 123 (type)


state 66

   24 formal_list: TOK_LPAREN formal_param_list . TOK_RPAREN

    TOK_RPAREN  shift, and go to state 115


state 67

   26 formal_param_list: formal_params .
   28 formal_params: formal_params . TOK_COMMA formal_param

    TOK_COMMA  shift, and go to state 116

    $default  reduce using rule 26 (formal_param_list)


state 68

   27 formal_params: formal_param .

    $default  reduce using rule 27 (formal_params)


state 69

   29 formal_param: type . var_ident

    TOK_IDENT  shift, and go to state 117

    var_ident  go to state 118


state 70

   30 func: func_hdr formal_list TOK_SEMICOLON .

    $default  reduce using rule 30 (func)


state 71

   34 func_body: TOK_LBRACE . func_stmt TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_VOID       shift, and go to state 11
    TOK_STRING     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_UNSIGNED   shift, and go to state 14
    TOK_BOOL       shift, and go to state 15
    TOK_BYTE       shift, and go to state 16
    TOK_DOUBLE     shift, and go to state 17
    TOK_IDENT      shift, and go to state 119
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    variable       go to state 120
    var_star       go to state 121
    func_stmt      go to state 122
    stmt           go to state 123
    compstmt_star  go to state 83
    compstmt       go to state 84
    stmt_star      go to state 124
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92
    baseType       go to state 32
    type           go to state 125


state 72

   31 func: func_hdr formal_list func_body .

    $default  reduce using rule 31 (func)


state 73

   41 rule_pattern: rule_pattern . TOK_PAT_STAR
   43             | rule_pattern . TOK_PAT_OR rule_pattern
   43             | rule_pattern TOK_PAT_OR rule_pattern .
   44             | rule_pattern . TOK_COLON rule_pattern

    TOK_PAT_STAR  shift, and go to state 52
    TOK_COLON     shift, and go to state 54

    $default  reduce using rule 43 (rule_pattern)


state 74

   41 rule_pattern: rule_pattern . TOK_PAT_STAR
   43             | rule_pattern . TOK_PAT_OR rule_pattern
   44             | rule_pattern . TOK_COLON rule_pattern
   44             | rule_pattern TOK_COLON rule_pattern .

    TOK_PAT_STAR  shift, and go to state 52

    $default  reduce using rule 44 (rule_pattern)


state 75

   55 stmt: TOK_SEMICOLON .

    $default  reduce using rule 55 (stmt)


state 76

   65 compstmt: TOK_LBRACE . stmt_star TOK_RBRACE

    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_IDENT      shift, and go to state 79
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    stmt           go to state 123
    compstmt_star  go to state 83
    compstmt       go to state 84
    stmt_star      go to state 126
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92


state 77

   73 if_expr: TOK_IF . expr stmt

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 127
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 78

   69 return_stmt: TOK_RETURN . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 128
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 79

   75 fun_call_stmt: TOK_IDENT . func_params TOK_SEMICOLON
  109 ref_expr: TOK_IDENT .

    TOK_LPAREN  shift, and go to state 129

    $default  reduce using rule 109 (ref_expr)

    func_params  go to state 130


state 80

   74 while_expr: TOK_WHILE . expr stmt

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 131
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 81

   70 break_stmt: TOK_BREAK .

    $default  reduce using rule 70 (break_stmt)


state 82

   39 rule: rule_pattern TOK_ARROW stmt .

    $default  reduce using rule 39 (rule)


state 83

   58 stmt: compstmt_star .

    $default  reduce using rule 58 (stmt)


state 84

   63 compstmt_star: compstmt .
   64              | compstmt . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 132

    $default  reduce using rule 63 (compstmt_star)


state 85

   56 stmt: return_stmt . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 133


state 86

   57 stmt: break_stmt . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 134


state 87

   60 stmt: if_expr_star .

    $default  reduce using rule 60 (stmt)


state 88

   71 if_expr_star: if_expr .
   72             | if_expr . TOK_ELSE stmt

    TOK_ELSE  shift, and go to state 135

    $default  reduce using rule 71 (if_expr_star)


state 89

   61 stmt: while_expr .

    $default  reduce using rule 61 (stmt)


state 90

   62 stmt: fun_call_stmt .

    $default  reduce using rule 62 (stmt)


state 91

   59 stmt: assign_expr . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 136


state 92

  108 assign_expr: ref_expr . TOK_ASSIGN expr

    TOK_ASSIGN  shift, and go to state 137


state 93

  101 expr: TOK_MINUS . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 138
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 94

  103 expr: TOK_BITNOT . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 139
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 95

  102 expr: TOK_NOT . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 140
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 96

  100 expr: TOK_LPAREN . expr TOK_RPAREN

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 141
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 97

  111 literal: TOK_UINTNUM .

    $default  reduce using rule 111 (literal)


state 98

  112 literal: TOK_DOUBLENUM .

    $default  reduce using rule 112 (literal)


state 99

  110 literal: TOK_STRCONST .

    $default  reduce using rule 110 (literal)


state 100

  113 literal: TOK_TRUE .

    $default  reduce using rule 113 (literal)


state 101

  114 literal: TOK_FALSE .

    $default  reduce using rule 114 (literal)


state 102

   76 fun_call: TOK_IDENT . func_params
  109 ref_expr: TOK_IDENT .

    TOK_LPAREN  shift, and go to state 129

    $default  reduce using rule 109 (ref_expr)

    func_params  go to state 142


state 103

  107 expr_star: fun_call .

    $default  reduce using rule 107 (expr_star)


state 104

   47 primitive_pat_star: primitive_pat TOK_BITOR expr .
   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158
    TOK_AND     shift, and go to state 159
    TOK_OR      shift, and go to state 160

    $default  reduce using rule 47 (primitive_pat_star)


state 105

   81 expr: expr_star .

    $default  reduce using rule 81 (expr)


state 106

  106 expr_star: assign_expr .

    $default  reduce using rule 106 (expr_star)


state 107

  105 expr_star: ref_expr .
  108 assign_expr: ref_expr . TOK_ASSIGN expr

    TOK_ASSIGN  shift, and go to state 137

    $default  reduce using rule 105 (expr_star)


state 108

  104 expr_star: literal .

    $default  reduce using rule 104 (expr_star)


state 109

   11 variable: type error TOK_SEMICOLON .

    $default  reduce using rule 11 (variable)


state 110

   18 var_ident: TOK_IDENT TOK_ASSIGN . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 161
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 111

   15 ident_list: ident_list TOK_COMMA . var_ident

    TOK_IDENT  shift, and go to state 117

    var_ident  go to state 162


state 112

   10 variable: type ident_list TOK_SEMICOLON .

    $default  reduce using rule 10 (variable)


state 113

   54 event_params: event_params TOK_COMMA . TOK_IDENT

    TOK_IDENT  shift, and go to state 163


state 114

   51 event_params_list: TOK_LPAREN event_params TOK_RPAREN .

    $default  reduce using rule 51 (event_params_list)


state 115

   24 formal_list: TOK_LPAREN formal_param_list TOK_RPAREN .

    $default  reduce using rule 24 (formal_list)


state 116

   28 formal_params: formal_params TOK_COMMA . formal_param

    TOK_VOID      shift, and go to state 11
    TOK_STRING    shift, and go to state 12
    TOK_INT       shift, and go to state 13
    TOK_UNSIGNED  shift, and go to state 14
    TOK_BOOL      shift, and go to state 15
    TOK_BYTE      shift, and go to state 16
    TOK_DOUBLE    shift, and go to state 17
    TOK_IDENT     shift, and go to state 65

    formal_param  go to state 164
    baseType      go to state 32
    type          go to state 69


state 117

   17 var_ident: TOK_IDENT .
   18          | TOK_IDENT . TOK_ASSIGN expr

    TOK_ASSIGN  shift, and go to state 110

    $default  reduce using rule 17 (var_ident)


state 118

   29 formal_param: type var_ident .

    $default  reduce using rule 29 (formal_param)


state 119

   12 variable: TOK_IDENT . error TOK_SEMICOLON
   75 fun_call_stmt: TOK_IDENT . func_params TOK_SEMICOLON
  109 ref_expr: TOK_IDENT .
  123 type: TOK_IDENT .

    error       shift, and go to state 43
    TOK_LPAREN  shift, and go to state 129

    error       [reduce using rule 123 (type)]
    TOK_ASSIGN  reduce using rule 109 (ref_expr)
    TOK_IDENT   reduce using rule 123 (type)

    func_params  go to state 130


state 120

   13 var_star: variable .

    $default  reduce using rule 13 (var_star)


state 121

   14 var_star: var_star . variable
   36 func_stmt: var_star . stmt_star

    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_VOID       shift, and go to state 11
    TOK_STRING     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_UNSIGNED   shift, and go to state 14
    TOK_BOOL       shift, and go to state 15
    TOK_BYTE       shift, and go to state 16
    TOK_DOUBLE     shift, and go to state 17
    TOK_IDENT      shift, and go to state 119
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    variable       go to state 165
    stmt           go to state 123
    compstmt_star  go to state 83
    compstmt       go to state 84
    stmt_star      go to state 166
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92
    baseType       go to state 32
    type           go to state 125


state 122

   34 func_body: TOK_LBRACE func_stmt . TOK_RBRACE

    TOK_RBRACE  shift, and go to state 167


state 123

   67 stmt_star: stmt .

    $default  reduce using rule 67 (stmt_star)


state 124

   35 func_stmt: stmt_star .
   66 stmt_star: stmt_star . stmt
   68          | stmt_star . error

    error          shift, and go to state 168
    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_IDENT      shift, and go to state 79
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    TOK_RBRACE  reduce using rule 35 (func_stmt)

    stmt           go to state 169
    compstmt_star  go to state 83
    compstmt       go to state 84
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92


state 125

   10 variable: type . ident_list TOK_SEMICOLON
   11         | type . error TOK_SEMICOLON

    error      shift, and go to state 170
    TOK_IDENT  shift, and go to state 117

    ident_list  go to state 59
    var_ident   go to state 60


state 126

   65 compstmt: TOK_LBRACE stmt_star . TOK_RBRACE
   66 stmt_star: stmt_star . stmt
   68          | stmt_star . error

    error          shift, and go to state 168
    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_RBRACE     shift, and go to state 171
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_IDENT      shift, and go to state 79
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    stmt           go to state 169
    compstmt_star  go to state 83
    compstmt       go to state 84
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92


state 127

   73 if_expr: TOK_IF expr . stmt
   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS       shift, and go to state 143
    TOK_MINUS      shift, and go to state 144
    TOK_MULT       shift, and go to state 145
    TOK_DIV        shift, and go to state 146
    TOK_MOD        shift, and go to state 147
    TOK_BITAND     shift, and go to state 148
    TOK_BITOR      shift, and go to state 149
    TOK_BITXOR     shift, and go to state 150
    TOK_SHL        shift, and go to state 151
    TOK_SHR        shift, and go to state 152
    TOK_GT         shift, and go to state 153
    TOK_LT         shift, and go to state 154
    TOK_GE         shift, and go to state 155
    TOK_LE         shift, and go to state 156
    TOK_EQ         shift, and go to state 157
    TOK_NE         shift, and go to state 158
    TOK_AND        shift, and go to state 159
    TOK_OR         shift, and go to state 160
    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_IDENT      shift, and go to state 79
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    stmt           go to state 172
    compstmt_star  go to state 83
    compstmt       go to state 84
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92


state 128

   69 return_stmt: TOK_RETURN expr .
   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158
    TOK_AND     shift, and go to state 159
    TOK_OR      shift, and go to state 160

    $default  reduce using rule 69 (return_stmt)


state 129

   77 func_params: TOK_LPAREN . func_param_list TOK_RPAREN

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    $default  reduce using rule 78 (func_param_list)

    fun_call         go to state 103
    func_param_list  go to state 173
    expr             go to state 174
    expr_star        go to state 105
    assign_expr      go to state 106
    ref_expr         go to state 107
    literal          go to state 108


state 130

   75 fun_call_stmt: TOK_IDENT func_params . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 175


state 131

   74 while_expr: TOK_WHILE expr . stmt
   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS       shift, and go to state 143
    TOK_MINUS      shift, and go to state 144
    TOK_MULT       shift, and go to state 145
    TOK_DIV        shift, and go to state 146
    TOK_MOD        shift, and go to state 147
    TOK_BITAND     shift, and go to state 148
    TOK_BITOR      shift, and go to state 149
    TOK_BITXOR     shift, and go to state 150
    TOK_SHL        shift, and go to state 151
    TOK_SHR        shift, and go to state 152
    TOK_GT         shift, and go to state 153
    TOK_LT         shift, and go to state 154
    TOK_GE         shift, and go to state 155
    TOK_LE         shift, and go to state 156
    TOK_EQ         shift, and go to state 157
    TOK_NE         shift, and go to state 158
    TOK_AND        shift, and go to state 159
    TOK_OR         shift, and go to state 160
    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_IDENT      shift, and go to state 79
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    stmt           go to state 176
    compstmt_star  go to state 83
    compstmt       go to state 84
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92


state 132

   64 compstmt_star: compstmt TOK_SEMICOLON .

    $default  reduce using rule 64 (compstmt_star)


state 133

   56 stmt: return_stmt TOK_SEMICOLON .

    $default  reduce using rule 56 (stmt)


state 134

   57 stmt: break_stmt TOK_SEMICOLON .

    $default  reduce using rule 57 (stmt)


state 135

   72 if_expr_star: if_expr TOK_ELSE . stmt

    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_IDENT      shift, and go to state 79
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    stmt           go to state 177
    compstmt_star  go to state 83
    compstmt       go to state 84
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92


state 136

   59 stmt: assign_expr TOK_SEMICOLON .

    $default  reduce using rule 59 (stmt)


state 137

  108 assign_expr: ref_expr TOK_ASSIGN . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 178
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 138

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr
  101     | TOK_MINUS expr .

    TOK_MULT  shift, and go to state 145
    TOK_DIV   shift, and go to state 146
    TOK_MOD   shift, and go to state 147

    $default  reduce using rule 101 (expr)


state 139

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr
  103     | TOK_BITNOT expr .

    TOK_PLUS   shift, and go to state 143
    TOK_MINUS  shift, and go to state 144
    TOK_MULT   shift, and go to state 145
    TOK_DIV    shift, and go to state 146
    TOK_MOD    shift, and go to state 147
    TOK_SHL    shift, and go to state 151
    TOK_SHR    shift, and go to state 152

    $default  reduce using rule 103 (expr)


state 140

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr
  102     | TOK_NOT expr .

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158

    $default  reduce using rule 102 (expr)


state 141

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr
  100     | TOK_LPAREN expr . TOK_RPAREN

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158
    TOK_AND     shift, and go to state 159
    TOK_OR      shift, and go to state 160
    TOK_RPAREN  shift, and go to state 179


state 142

   76 fun_call: TOK_IDENT func_params .

    $default  reduce using rule 76 (fun_call)


state 143

   82 expr: expr TOK_PLUS . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 180
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 144

   83 expr: expr TOK_MINUS . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 181
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 145

   84 expr: expr TOK_MULT . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 182
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 146

   85 expr: expr TOK_DIV . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 183
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 147

   86 expr: expr TOK_MOD . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 184
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 148

   87 expr: expr TOK_BITAND . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 185
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 149

   88 expr: expr TOK_BITOR . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 186
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 150

   89 expr: expr TOK_BITXOR . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 187
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 151

   90 expr: expr TOK_SHL . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 188
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 152

   91 expr: expr TOK_SHR . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 189
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 153

   96 expr: expr TOK_GT . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 190
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 154

   97 expr: expr TOK_LT . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 191
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 155

   98 expr: expr TOK_GE . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 192
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 156

   99 expr: expr TOK_LE . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 193
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 157

   94 expr: expr TOK_EQ . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 194
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 158

   95 expr: expr TOK_NE . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 195
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 159

   92 expr: expr TOK_AND . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 196
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 160

   93 expr: expr TOK_OR . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 197
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 161

   18 var_ident: TOK_IDENT TOK_ASSIGN expr .
   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158
    TOK_AND     shift, and go to state 159
    TOK_OR      shift, and go to state 160

    $default  reduce using rule 18 (var_ident)


state 162

   15 ident_list: ident_list TOK_COMMA var_ident .

    $default  reduce using rule 15 (ident_list)


state 163

   54 event_params: event_params TOK_COMMA TOK_IDENT .

    $default  reduce using rule 54 (event_params)


state 164

   28 formal_params: formal_params TOK_COMMA formal_param .

    $default  reduce using rule 28 (formal_params)


state 165

   14 var_star: var_star variable .

    $default  reduce using rule 14 (var_star)


state 166

   36 func_stmt: var_star stmt_star .
   66 stmt_star: stmt_star . stmt
   68          | stmt_star . error

    error          shift, and go to state 168
    TOK_SEMICOLON  shift, and go to state 75
    TOK_LBRACE     shift, and go to state 76
    TOK_IF         shift, and go to state 77
    TOK_RETURN     shift, and go to state 78
    TOK_IDENT      shift, and go to state 79
    TOK_WHILE      shift, and go to state 80
    TOK_BREAK      shift, and go to state 81

    TOK_RBRACE  reduce using rule 36 (func_stmt)

    stmt           go to state 169
    compstmt_star  go to state 83
    compstmt       go to state 84
    return_stmt    go to state 85
    break_stmt     go to state 86
    if_expr_star   go to state 87
    if_expr        go to state 88
    while_expr     go to state 89
    fun_call_stmt  go to state 90
    assign_expr    go to state 91
    ref_expr       go to state 92


state 167

   34 func_body: TOK_LBRACE func_stmt TOK_RBRACE .

    $default  reduce using rule 34 (func_body)


state 168

   68 stmt_star: stmt_star error .

    $default  reduce using rule 68 (stmt_star)


state 169

   66 stmt_star: stmt_star stmt .

    $default  reduce using rule 66 (stmt_star)


state 170

   11 variable: type error . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 109


state 171

   65 compstmt: TOK_LBRACE stmt_star TOK_RBRACE .

    $default  reduce using rule 65 (compstmt)


state 172

   73 if_expr: TOK_IF expr stmt .

    $default  reduce using rule 73 (if_expr)


state 173

   77 func_params: TOK_LPAREN func_param_list . TOK_RPAREN
   80 func_param_list: func_param_list . TOK_COMMA expr

    TOK_COMMA   shift, and go to state 198
    TOK_RPAREN  shift, and go to state 199


state 174

   79 func_param_list: expr .
   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158
    TOK_AND     shift, and go to state 159
    TOK_OR      shift, and go to state 160

    $default  reduce using rule 79 (func_param_list)


state 175

   75 fun_call_stmt: TOK_IDENT func_params TOK_SEMICOLON .

    $default  reduce using rule 75 (fun_call_stmt)


state 176

   74 while_expr: TOK_WHILE expr stmt .

    $default  reduce using rule 74 (while_expr)


state 177

   72 if_expr_star: if_expr TOK_ELSE stmt .

    $default  reduce using rule 72 (if_expr_star)


state 178

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr
  108 assign_expr: ref_expr TOK_ASSIGN expr .

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158
    TOK_AND     shift, and go to state 159
    TOK_OR      shift, and go to state 160

    $default  reduce using rule 108 (assign_expr)


state 179

  100 expr: TOK_LPAREN expr TOK_RPAREN .

    $default  reduce using rule 100 (expr)


state 180

   82 expr: expr . TOK_PLUS expr
   82     | expr TOK_PLUS expr .
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_MULT  shift, and go to state 145
    TOK_DIV   shift, and go to state 146
    TOK_MOD   shift, and go to state 147

    $default  reduce using rule 82 (expr)


state 181

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   83     | expr TOK_MINUS expr .
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_MULT  shift, and go to state 145
    TOK_DIV   shift, and go to state 146
    TOK_MOD   shift, and go to state 147

    $default  reduce using rule 83 (expr)


state 182

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   84     | expr TOK_MULT expr .
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    $default  reduce using rule 84 (expr)


state 183

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   85     | expr TOK_DIV expr .
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    $default  reduce using rule 85 (expr)


state 184

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   86     | expr TOK_MOD expr .
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    $default  reduce using rule 86 (expr)


state 185

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   87     | expr TOK_BITAND expr .
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS   shift, and go to state 143
    TOK_MINUS  shift, and go to state 144
    TOK_MULT   shift, and go to state 145
    TOK_DIV    shift, and go to state 146
    TOK_MOD    shift, and go to state 147
    TOK_SHL    shift, and go to state 151
    TOK_SHR    shift, and go to state 152

    $default  reduce using rule 87 (expr)


state 186

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   88     | expr TOK_BITOR expr .
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152

    $default  reduce using rule 88 (expr)


state 187

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   89     | expr TOK_BITXOR expr .
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152

    $default  reduce using rule 89 (expr)


state 188

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   90     | expr TOK_SHL expr .
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS   shift, and go to state 143
    TOK_MINUS  shift, and go to state 144
    TOK_MULT   shift, and go to state 145
    TOK_DIV    shift, and go to state 146
    TOK_MOD    shift, and go to state 147

    $default  reduce using rule 90 (expr)


state 189

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   91     | expr TOK_SHR expr .
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS   shift, and go to state 143
    TOK_MINUS  shift, and go to state 144
    TOK_MULT   shift, and go to state 145
    TOK_DIV    shift, and go to state 146
    TOK_MOD    shift, and go to state 147

    $default  reduce using rule 91 (expr)


state 190

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   96     | expr TOK_GT expr .
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 96 (expr)


state 191

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   97     | expr TOK_LT expr .
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 97 (expr)


state 192

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   98     | expr TOK_GE expr .
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 98 (expr)


state 193

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr
   99     | expr TOK_LE expr .

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 99 (expr)


state 194

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   94     | expr TOK_EQ expr .
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 94 (expr)


state 195

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   95     | expr TOK_NE expr .
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152

    TOK_GT  error (nonassociative)
    TOK_LT  error (nonassociative)
    TOK_GE  error (nonassociative)
    TOK_LE  error (nonassociative)
    TOK_EQ  error (nonassociative)
    TOK_NE  error (nonassociative)

    $default  reduce using rule 95 (expr)


state 196

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   92     | expr TOK_AND expr .
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158

    $default  reduce using rule 92 (expr)


state 197

   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   93     | expr TOK_OR expr .
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158
    TOK_AND     shift, and go to state 159

    $default  reduce using rule 93 (expr)


state 198

   80 func_param_list: func_param_list TOK_COMMA . expr

    TOK_MINUS      shift, and go to state 93
    TOK_BITNOT     shift, and go to state 94
    TOK_NOT        shift, and go to state 95
    TOK_LPAREN     shift, and go to state 96
    TOK_UINTNUM    shift, and go to state 97
    TOK_DOUBLENUM  shift, and go to state 98
    TOK_STRCONST   shift, and go to state 99
    TOK_TRUE       shift, and go to state 100
    TOK_FALSE      shift, and go to state 101
    TOK_IDENT      shift, and go to state 102

    fun_call     go to state 103
    expr         go to state 200
    expr_star    go to state 105
    assign_expr  go to state 106
    ref_expr     go to state 107
    literal      go to state 108


state 199

   77 func_params: TOK_LPAREN func_param_list TOK_RPAREN .

    $default  reduce using rule 77 (func_params)


state 200

   80 func_param_list: func_param_list TOK_COMMA expr .
   82 expr: expr . TOK_PLUS expr
   83     | expr . TOK_MINUS expr
   84     | expr . TOK_MULT expr
   85     | expr . TOK_DIV expr
   86     | expr . TOK_MOD expr
   87     | expr . TOK_BITAND expr
   88     | expr . TOK_BITOR expr
   89     | expr . TOK_BITXOR expr
   90     | expr . TOK_SHL expr
   91     | expr . TOK_SHR expr
   92     | expr . TOK_AND expr
   93     | expr . TOK_OR expr
   94     | expr . TOK_EQ expr
   95     | expr . TOK_NE expr
   96     | expr . TOK_GT expr
   97     | expr . TOK_LT expr
   98     | expr . TOK_GE expr
   99     | expr . TOK_LE expr

    TOK_PLUS    shift, and go to state 143
    TOK_MINUS   shift, and go to state 144
    TOK_MULT    shift, and go to state 145
    TOK_DIV     shift, and go to state 146
    TOK_MOD     shift, and go to state 147
    TOK_BITAND  shift, and go to state 148
    TOK_BITOR   shift, and go to state 149
    TOK_BITXOR  shift, and go to state 150
    TOK_SHL     shift, and go to state 151
    TOK_SHR     shift, and go to state 152
    TOK_GT      shift, and go to state 153
    TOK_LT      shift, and go to state 154
    TOK_GE      shift, and go to state 155
    TOK_LE      shift, and go to state 156
    TOK_EQ      shift, and go to state 157
    TOK_NE      shift, and go to state 158
    TOK_AND     shift, and go to state 159
    TOK_OR      shift, and go to state 160

    $default  reduce using rule 80 (func_param_list)
