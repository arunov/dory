JMP L_begin

L_operators_test: MOVI R001 R002
ADD R001 1 R003
LDI R003 R005
ADD R003 1 R003
LDI R003 R006
ADD R003 1 R003
MOVI 1 R008
MOVI 2 R009
ADD R008 R009 R010
STI R010 R001
SUB R001 1 R001
SUB R002 0 R012
LDI R012 R007
MOVI 3 R013
NEG R013 R014
SUB R007 R014 R015
STI R015 R001
SUB R001 1 R001
MOVF 5.670 F001
MOVF 10.000 F002
FMUL F001 F002 F003
STF F003 R001
SUB R001 1 R001
MOVI 4 R017
SUB R002 1 R018
LDI R018 R011
MUL R017 R011 R019
STI R019 R001
SUB R001 1 R001
MOVI 2 R021
SUB R002 0 R022
LDI R022 R007
SUB R021 R007 R023
STI R023 R001
SUB R001 1 R001
MOVI 6 R025
MOVI 2 R026
DIV R025 R026 R027
STI R027 R001
SUB R001 1 R001
SUB R002 0 R029
LDI R029 R007
MOVI 2 R030
DIV R007 R030 R031
STI R031 R001
SUB R001 1 R001
MOVI 8 R033
MOVI 2 R034
MOD R033 R034 R035
STI R035 R001
SUB R001 1 R001
MOVI 0 R037
MOVI 1 R038
MOVI 0 R039
AND R038 R039 R040
OR R037 R040 R041
STI R041 R001
SUB R001 1 R001
SUB R002 8 R043
LDI R043 R036
XOR R036 -1 R044
STI R044 R001
SUB R001 1 R001
MOVI 1 R046
MOVI 1 R047
XOR R046 R047 R048
STI R048 R001
SUB R001 1 R001
SUB R002 0 R050
LDI R050 R007
MOVI 2 R051
MOVI R051 R053
MOVI R007 R054
MOVI 2 R055
L0: JMPC EQ R053 0 L1
MUL R055 R054 R054
SUB R053 1 R053
JMP L0

L1: MOVI R054 R052
STI R052 R001
SUB R001 1 R001
SUB R002 0 R057
LDI R057 R007
MOVI 1 R058
MOVI R058 R060
MOVI R007 R061
MOVI 2 R062
L2: JMPC EQ R060 0 L3
DIV R062 R061 R061
SUB R060 1 R060
JMP L2

L3: MOVI R061 R059
STI R059 R001
SUB R001 1 R001
SUB R002 0 R063
LDI R063 R007
SUB R002 1 R064
LDI R064 R011
MOD R007 R011 R065
SUB R002 3 R066
LDI R066 R016
MOVI 3 R067
DIV R016 R067 R068
SUB R065 R068 R069
MOVIF R069 F005
STF F005 R001
SUB R001 1 R001
MOVI 1 R073
MOVI 1 R071
JMPC NE R073 0 L4
MOVI 0 R074
JMPC NE R074 0 L4
MOVI 0 R071
L4: STI R071 R001
SUB R001 1 R001
MOVS "\nEntering Operator Testing Function\n" R076
PRTS R076
SUB R002 0 R078
LDI R078 R007
MOVS "\n a = (1+2): " R079
PRTS R079
PRTI R007
SUB R002 1 R081
LDI R081 R011
MOVS "\n b = (a-(-3)): " R082
PRTS R082
PRTI R011
SUB R002 2 R084
LDF R084 F000
MOVS "\n c = (5.67*10): " R085
PRTS R085
PRTF F000
SUB R002 3 R087
LDI R087 R016
MOVS "\n d = (4*b): " R088
PRTS R088
PRTI R016
SUB R002 4 R090
LDI R090 R020
MOVS "\n e = (2-a): " R091
PRTS R091
PRTI R020
SUB R002 5 R093
LDI R093 R024
MOVS "\n f = (6/2): " R094
PRTS R094
PRTI R024
SUB R002 6 R096
LDI R096 R028
MOVS "\n g = (a/2): " R097
PRTS R097
PRTI R028
SUB R002 7 R099
LDI R099 R032
MOVS "\n h = (8 mod 2): " R100
PRTS R100
PRTI R032
SUB R002 8 R102
LDI R102 R036
MOVS "\n i = (0|1&0): " R103
PRTS R103
PRTI R036
SUB R002 9 R105
LDI R105 R042
MOVS "\n j = (~i): " R106
PRTS R106
PRTI R042
SUB R002 10 R108
LDI R108 R045
MOVS "\n k = (1^1): " R109
PRTS R109
PRTI R045
SUB R002 11 R111
LDI R111 R049
MOVS "\n l = (a<<2): " R112
PRTS R112
PRTI R049
SUB R002 12 R114
LDI R114 R056
MOVS "\n m = (a>>2): " R115
PRTS R115
PRTI R056
SUB R002 13 R117
LDF R117 F004
MOVS "\n n = (a mod b - d / 3): " R118
PRTS R118
PRTF F004
SUB R002 14 R120
LDI R120 R070
MOVS "\n p = (true || false): " R121
PRTS R121
PRTI R070
MOVS "\nLeaving Operator Testing Function\n" R123
PRTS R123
L5: ADD R001 16 R003
LDI R003 R124
MOVI R124 R002
ADD R001 17 R001
LDI R001 R125
JMPI R125
L_call_test: MOVI R001 R002
ADD R001 1 R003
LDI R003 R126
ADD R003 1 R003
LDI R003 R127
ADD R003 1 R003
MOVS "\n................Start-Test................\n" R129
PRTS R129
SUB R001 1 R001
SUB R001 1 R001
MOVL L7 R130
STI R130 R001
SUB R001 1 R001
STI R002 R001
SUB R001 1 R001
JMP L_operators_test

L7: ADD R001 1 R001
ADD R001 1 R001
MOVS "\n.................End-Test..................\n" R132
PRTS R132
L6: ADD R001 1 R003
LDI R003 R133
MOVI R133 R002
ADD R001 2 R001
LDI R001 R134
JMPI R134
L_begin: IN R004
MOVI 10000 R001
MOVI 10000 R002
MOVI 102 R135
JMPC EQ R135 R004 L_f
JMP L_begin

L_f: SUB R001 1 R001
SUB R001 1 R001
MOVL L8 R136
STI R136 R001
SUB R001 1 R001
STI R002 R001
SUB R001 1 R001
JMP L_call_test

L8: ADD R001 1 R001
ADD R001 1 R001
JMP L_end_label

L_end_label: PRTS "**** Done ****"
